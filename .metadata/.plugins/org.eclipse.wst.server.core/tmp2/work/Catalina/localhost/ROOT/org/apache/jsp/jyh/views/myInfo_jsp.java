/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.68
 * Generated at: 2023-01-05 13:29:22 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jyh.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import jyh.model.memberDTO;

public final class myInfo_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("jyh.model.memberDTO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>찜꽁</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"/jyh/views/myInfo.css\">\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("    /* ㅇㅇ */\r\n");
      out.write("    .content{\r\n");
      out.write("        width: 100%;\r\n");
      out.write("        height: 500px;\r\n");
      out.write("        background-color: #fff;\r\n");
      out.write("    }\r\n");
      out.write("    .myPage{\r\n");
      out.write("        width : 50%;\r\n");
      out.write("        height: 50px;\r\n");
      out.write("        border:1px solid black;\r\n");
      out.write("    }\r\n");
      out.write("    .e_form h1{\r\n");
      out.write("       margin-top:10px; \r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

memberDTO loginUser = (memberDTO)session.getAttribute("sesID");
memberDTO mem = (memberDTO)request.getAttribute("memInfo");
String eAuth = "";
String iAuth = "";
String userEmail = mem.getEmail();
String userPw = mem.getPw() != null ? mem.getPw() : "";
int emailAuth = mem.getEmailAuth();
if(emailAuth==1){
	eAuth = "인증완료";
}else{
	eAuth = "인증안됨";
}
String nickName = mem.getNickName();
String pNum = mem.getPhoneNum() != null ? mem.getPhoneNum() : "";
String addr = mem.getAddress()  != null ? mem.getAddress() : "";
int noshow = mem.getNoshow();
int idAuth = mem.getIdAuth();
if(idAuth==2){
	iAuth = "네이버 연동";
}else if(idAuth==1){
	iAuth = "카카오 연동";
}else{
	iAuth = "찜꽁 계정";
}

      out.write("\r\n");
      out.write("<div class=\"wrapper\">\r\n");
      out.write("    <header>\r\n");
      out.write("        <a class=\"logo\" href = \"/ljw/pg0000.jsp\"><img src=\"/index_markup/img/main_logo.png\" alt=\"\"></a>\r\n");
      out.write("         <nav class=\"gnb\">\r\n");
      out.write("            <ul>\r\n");
      out.write("                <li><a href=\"/myInfoController\"><img src=\"/index_markup/img/myPageImg.png\" alt=\"\"></a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("         </nav>\r\n");
      out.write("    </header>\r\n");
      out.write("    <section>\r\n");
      out.write("        <div class=\"content\">\r\n");
      out.write("            <div class =\"cont_header\">   \r\n");
      out.write("           <div class = \"myPage1\">\r\n");
      out.write("             <h4>내정보 관리</h4>\r\n");
      out.write("           </div>\r\n");
      out.write("           <div class = \"myPage2\" onclick = \"view();\" >\r\n");
      out.write("             <h4>리뷰 관리</h4>\r\n");
      out.write("           </div>\r\n");
      out.write("            </div>\r\n");
      out.write("            <div class = \"content_form\">\r\n");
      out.write("                    <div id = \"e_form\">\r\n");
      out.write("                    <h1>내정보 보기</h1>\r\n");
      out.write("                    <div id = \"inform\">\r\n");
      out.write("                    <div class=\"insert_form\">\r\n");
      out.write("                        <b>이메일</b>\r\n");
      out.write("                        <p>");
      out.print(userEmail);
      out.write("</p>         \r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"insert_form\">\r\n");
      out.write("                        <b>이메일 인증</b>\r\n");
      out.write("                        <p>");
      out.print(eAuth );
      out.write("</p>         \r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class = \"insert_form\">\r\n");
      out.write("                      <b>비밀번호</b>\r\n");
      out.write("                        <p>");
      out.print(userPw );
      out.write("</p> \r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class = \"insert_form\">\r\n");
      out.write("                        <b>닉네임</b>\r\n");
      out.write("                        <p>");
      out.print(nickName );
      out.write("</p> \r\n");
      out.write("                    </div>\r\n");
      out.write("                     <div class = \"insert_form\">\r\n");
      out.write("                        <b>주소</b>\r\n");
      out.write("                        <p>");
      out.print(addr );
      out.write("</p> \r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class = \"insert_form\">\r\n");
      out.write("                        <b>계정 연동</b>\r\n");
      out.write("                        <p>");
      out.print(iAuth );
      out.write("</p> \r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class = \"insert_form\">\r\n");
      out.write("                        <b>전화번호</b>\r\n");
      out.write("                        <p>");
      out.print(pNum );
      out.write("</p> \r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class = \"insert_form\">\r\n");
      out.write("                        <b>노쇼 수</b>\r\n");
      out.write("                        <p>");
      out.print(noshow );
      out.write("번</p> \r\n");
      out.write("                    </div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                </div>\r\n");
      out.write("                <div id = \"button_box\">\r\n");
      out.write("                <button type=\"button\" class=\"w-btn w-btn-indigo\" onclick=\"updatefunction();\">수정하기</button>\r\n");
      out.write("                    <button type=\"button\" class=\"w-btn w-btn-indigo\" onclick=\"goPass();\">비밀번호변경</button>\r\n");
      out.write("                    <button type=\"button\" class=\"w-btn w-btn-indigo\" onclick=\"logOut();\">로그아웃</button>\r\n");
      out.write("                    <button type=\"button\" class=\"w-btn w-btn-indigo\" onclick=\"deleteAccount();\">회원탈퇴</button>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </div>\r\n");
      out.write("    </section>\r\n");
      out.write("    <footer>\r\n");
      out.write("        <nav class=\"footer_nav\">\r\n");
      out.write("            <ul>\r\n");
      out.write("                <li><a href=\"#\">서비스 이용약관</a></li>\r\n");
      out.write("                <li><a href=\"#\">개인정보 처리방침</a></li>\r\n");
      out.write("                <li><a href=\"#\">제휴 문의</a></li>\r\n");
      out.write("                <li><a href=\"#\">채용 공고</a></li>\r\n");
      out.write("            </ul>\r\n");
      out.write("        </nav>\r\n");
      out.write("        <p class=\"jjim_info\">\r\n");
      out.write("            (주) 찜꽁<br>\r\n");
      out.write("            대표 : 이지원<br>\r\n");
      out.write("            주소 : 서울특별시 마포구 월드컵북로 21 2층 풍성빌딩<br>\r\n");
      out.write("            사업자등록번호 : 202212142126<br>\r\n");
      out.write("            개인정보담당 : service@jjimggong.co.kr\r\n");
      out.write("        </p>\r\n");
      out.write("\r\n");
      out.write("    </footer>\r\n");
      out.write("</div>\r\n");
      out.write("<script type = \"text/javascript\">\r\n");
      out.write("var email = \"");
      out.print(userEmail);
      out.write("\";\r\n");
      out.write("var nickName = \"");
      out.print(nickName);
      out.write("\";\r\n");
      out.write("var pnum = \"");
      out.print(pNum);
      out.write("\";\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("function updateform(email,nickname,pnum){\r\n");
      out.write("	var frm = document.createElement('form');\r\n");
      out.write("	frm.setAttribute('method', 'post');\r\n");
      out.write("	frm.setAttribute('action', '/jyh/views/myInfoUpdate.jsp');\r\n");
      out.write("	var hiddenInput = document.createElement('input');\r\n");
      out.write("	hiddenInput.setAttribute('type','hidden');\r\n");
      out.write("	hiddenInput.setAttribute('name','email');\r\n");
      out.write("	hiddenInput.setAttribute('value',email);\r\n");
      out.write("	frm.appendChild(hiddenInput);\r\n");
      out.write("	var hiddenInput1 = document.createElement('input');\r\n");
      out.write("	hiddenInput1.setAttribute('type','hidden');\r\n");
      out.write("	hiddenInput1.setAttribute('name','nickName');\r\n");
      out.write("	hiddenInput1.setAttribute('value',nickName);\r\n");
      out.write("	frm.appendChild(hiddenInput1);\r\n");
      out.write("	var hiddenInput2 = document.createElement('input');\r\n");
      out.write("	hiddenInput2.setAttribute('type','hidden');\r\n");
      out.write("	hiddenInput2.setAttribute('name','pNum');\r\n");
      out.write("	hiddenInput2.setAttribute('value',pnum);\r\n");
      out.write("	frm.appendChild(hiddenInput2);\r\n");
      out.write("	document.body.appendChild(frm);\r\n");
      out.write("	frm.submit();\r\n");
      out.write("}\r\n");
      out.write("//수정하기 \r\n");
      out.write("function updatefunction(){\r\n");
      out.write("	alert(\"수정하기 페이지로 이동합니다.\");\r\n");
      out.write("	updateform(email,nickName,pnum);\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write("//로그아웃 function \r\n");
      out.write("function logOut(){\r\n");
      out.write("	if(confirm(\"로그아웃 하시겠습니까 ?\")==true){\r\n");
      out.write("		location.href = \"/logOutService\";\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("//비밀번호 변경 \r\n");
      out.write("function goPass(){\r\n");
      out.write("	location.href = \"/jyh/views/emailAuth.jsp\";\r\n");
      out.write("}\r\n");
      out.write("//리뷰 페이지로 고고 \r\n");
      out.write("function view(){\r\n");
      out.write("	location.href = \"/jyh/views/reviewList.jsp\";\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("function deleteAccount(){\r\n");
      out.write("	if(confirm(\"탈퇴하면 모든 정보가 날아갑니다. 그래도 탈퇴하시겠습니까?\")==true){\r\n");
      out.write("		location.href = \"/deleteController\";\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
